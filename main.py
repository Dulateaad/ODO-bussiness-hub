import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TARGET_URL = "https://studio--studio-122846357-42699.us-central1.hosted.app"
PORT = int(os.getenv("PORT", 8080))
WEBHOOK_URL = os.getenv("RENDER_EXTERNAL_URL")  # Render —Å–∞–º –ø–æ–¥—Å—Ç–∞–≤–∏—Ç URL

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å Studio", url=TARGET_URL)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Studio:",
        reply_markup=reply_markup
    )

def main():
    if not TOKEN:
        raise ValueError("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω!")

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))

    # –ó–∞–ø—É—Å–∫ –∫–∞–∫ webhook –¥–ª—è Render
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook...")
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=f"{WEBHOOK_URL}/webhook"
    )

if __name__ == "__main__":
    main()
